volumes:
    ghi: 
        external: true
    yovies-data:
        external: true
services:
    react:
        image: node:lts-bullseye
        command: /bin/bash run.sh
        working_dir: /app
        volumes:
            - ./ghi:/app
        ports:
            - "3000:3000"
        environment:
            HOST_OS: ${OS}
            NODE_ENV: development
            HOST: "0.0.0.0"
            REACT_APP_ACCOUNTS_HOST: http://localhost:8080
            DJWTO_SIGNING_KEY: ${DJWTO_SIGNING_KEY}
    database:
        build:
            context: ./relational-data
            dockerfile: ./Dockerfile.dev
        volumes:
            - yovies-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_MULTIPLE_DATABASES=movies,reviews,accounts
            - POSTGRES_PASSWORD=test-databases
        ports:
            - 15432:5432
    movie-api:
        build:
            context: ./movies/api
            dockerfile: ./Dockerfile.dev
        ports:
            - "8100:8000"
        volumes:
            - ./movies/api:/app
        depends_on:
            - database
        environment:
            DATABASE_URL: postgresql://user-name:password@postgres/db-name
            WAIT_HOSTS: database:5432
    account-api:
        build:
            context: ./accounts/api
            dockerfile: ./Dockerfile.dev
        ports:
            - "8080:8000"
        volumes:
            - ./accounts/api:/app
        depends_on:
            - database
        environment:
            DATABASE_URL: postgresql://user-name:password@postgres/db-name
            WAIT_HOSTS: database:5432
            DJWTO_SIGNING_KEY: ${DJWTO_SIGNING_KEY}
            
    reviews-api:
        build:
            context: ./reviews/api
            dockerfile: ./Dockerfile.dev
        ports:
            - "8090:8000"
        volumes:
            - ./reviews/api:/app
        depends_on:
            - database
        environment:
            DATABASE_URL: postgresql://user-name:password@postgres/db-name
            WAIT_HOSTS: database:5432
